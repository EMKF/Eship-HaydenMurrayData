# NETS2017_Misc.txt - use 'firstyear' as business age
# NETS2017_Emp.txt - emp90 and empc90 tells you employees in business in 1990

import pandas as pd
import time
import numpy as np
import sys
import NETS.constants as c

pd.set_option('max_columns', 1000)
pd.set_option('max_info_columns', 1000)
pd.set_option('expand_frame_repr', False)
pd.set_option('display.max_rows', 30000)
pd.set_option('max_colwidth', 4000)
pd.set_option('display.float_format', lambda x: '%.4f' % x)
pd.options.mode.chained_assignment = None

# time
start = time.time()

# writer
writer = pd.ExcelWriter('/Users/hmurray/Desktop/data/general_content/vulnerability/self_emp_closures_vulnerability.xlsx', engine='xlsxwriter')

def data_create():
    # pull from s3
    return pd.read_csv('/Users/hmurray/Desktop/data/general_content/covid_bus_pulse_SHED_fin_means/jessica/data/raw_gsg_6.3.csv')
    print(df.head())


def feature_change(df):
    df = df[['Q2', 'Q56_15_1', 'Q4', 'Q7', 'Q8', 'Q9', 'Q29', 'Q30', 'WEIGHT']]
    df["Q4"].replace({1: "NEW", 2: "YOUNG", 3: "YOUNG", 4: "YOUNG", 5: "YOUNG", 6: "MATURE", 7: "MATURE"}, inplace=True)
    df['AGE'] = df['Q4']
    # rename Q2 and Q56_15_1
    df['Q2'] = df['Q2'].astype(str).replace(str(1), 'Still in business').replace(str(2), 'It has closed')
    df['Q56_15_1'] = df['Q56_15_1'].astype(str).replace(str(1), 'temp_closed').replace(str(0), 'did_not_close')
    # recreate employee structure categories
    df['full_time'] = df['Q7']
    df['part_time'] = df['Q8']
    df['contract'] = df['Q9']
    # recode number of workers
    structure_list = ['full_time', 'part_time', 'contract']
    for x in structure_list:
        df[x] = df[x].astype(str).replace(str(1), '1 Just myself and co-owners, no other employees').replace(str(2), '2 1-10') \
            .replace(str(3), '3-5 10+').replace(str(4), '3-5 10+').replace(str(5), '3-5 10+')
    # subset by full_time, Just myself and co-owners, no other employees
    df = df[df['full_time'] == '1 Just myself and co-owners, no other employees']
    df = df.reset_index(drop=True)
    return df

def ctabber(df):
    # weighted crosstab closures
    two = pd.crosstab(df['full_time'], df['Q56_15_1'], values=df['WEIGHT'], aggfunc='sum', normalize='index', margins=True)
    print(two)
    two.to_excel(writer, sheet_name=str('self_emp_closures'), index=True)
    return df


if __name__ == '__main__':
    df = data_create()
    df = feature_change(df)
    df = ctabber(df)
    print(df.head())
    # data_out(df_temp)


writer.close()
sys.exit()